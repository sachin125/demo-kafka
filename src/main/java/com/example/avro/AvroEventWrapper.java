/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AvroEventWrapper extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7197551901201710389L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroEventWrapper\",\"namespace\":\"com.example.avro\",\"fields\":[{\"name\":\"eventId\",\"type\":\"string\"},{\"name\":\"eventType\",\"type\":\"string\"},{\"name\":\"entityType\",\"type\":\"string\"},{\"name\":\"source\",\"type\":\"string\"},{\"name\":\"topic\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"traceId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"producerRegion\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"retryCount\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"ttl\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"timestamp\",\"type\":\"string\"},{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AvroUser\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"email\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"age\",\"type\":\"int\"},{\"name\":\"avroAddresses\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AvroAddress\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"street\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"zip\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userId\",\"type\":[\"null\",\"long\"],\"default\":null}]}},\"default\":[]}]},\"AvroAddress\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroEventWrapper> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroEventWrapper> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AvroEventWrapper> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AvroEventWrapper> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AvroEventWrapper> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AvroEventWrapper to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AvroEventWrapper from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AvroEventWrapper instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AvroEventWrapper fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence eventId;
  private java.lang.CharSequence eventType;
  private java.lang.CharSequence entityType;
  private java.lang.CharSequence source;
  private java.lang.CharSequence topic;
  private java.lang.CharSequence version;
  private java.lang.CharSequence traceId;
  private java.lang.CharSequence producerRegion;
  private java.lang.Integer retryCount;
  private java.lang.Integer ttl;
  private java.lang.CharSequence timestamp;
  private java.lang.Object data;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroEventWrapper() {}

  /**
   * All-args constructor.
   * @param eventId The new value for eventId
   * @param eventType The new value for eventType
   * @param entityType The new value for entityType
   * @param source The new value for source
   * @param topic The new value for topic
   * @param version The new value for version
   * @param traceId The new value for traceId
   * @param producerRegion The new value for producerRegion
   * @param retryCount The new value for retryCount
   * @param ttl The new value for ttl
   * @param timestamp The new value for timestamp
   * @param data The new value for data
   */
  public AvroEventWrapper(java.lang.CharSequence eventId, java.lang.CharSequence eventType, java.lang.CharSequence entityType, java.lang.CharSequence source, java.lang.CharSequence topic, java.lang.CharSequence version, java.lang.CharSequence traceId, java.lang.CharSequence producerRegion, java.lang.Integer retryCount, java.lang.Integer ttl, java.lang.CharSequence timestamp, java.lang.Object data) {
    this.eventId = eventId;
    this.eventType = eventType;
    this.entityType = entityType;
    this.source = source;
    this.topic = topic;
    this.version = version;
    this.traceId = traceId;
    this.producerRegion = producerRegion;
    this.retryCount = retryCount;
    this.ttl = ttl;
    this.timestamp = timestamp;
    this.data = data;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventId;
    case 1: return eventType;
    case 2: return entityType;
    case 3: return source;
    case 4: return topic;
    case 5: return version;
    case 6: return traceId;
    case 7: return producerRegion;
    case 8: return retryCount;
    case 9: return ttl;
    case 10: return timestamp;
    case 11: return data;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventId = (java.lang.CharSequence)value$; break;
    case 1: eventType = (java.lang.CharSequence)value$; break;
    case 2: entityType = (java.lang.CharSequence)value$; break;
    case 3: source = (java.lang.CharSequence)value$; break;
    case 4: topic = (java.lang.CharSequence)value$; break;
    case 5: version = (java.lang.CharSequence)value$; break;
    case 6: traceId = (java.lang.CharSequence)value$; break;
    case 7: producerRegion = (java.lang.CharSequence)value$; break;
    case 8: retryCount = (java.lang.Integer)value$; break;
    case 9: ttl = (java.lang.Integer)value$; break;
    case 10: timestamp = (java.lang.CharSequence)value$; break;
    case 11: data = value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'eventId' field.
   * @return The value of the 'eventId' field.
   */
  public java.lang.CharSequence getEventId() {
    return eventId;
  }


  /**
   * Sets the value of the 'eventId' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.CharSequence value) {
    this.eventId = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.CharSequence getEventType() {
    return eventType;
  }


  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.CharSequence value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'entityType' field.
   * @return The value of the 'entityType' field.
   */
  public java.lang.CharSequence getEntityType() {
    return entityType;
  }


  /**
   * Sets the value of the 'entityType' field.
   * @param value the value to set.
   */
  public void setEntityType(java.lang.CharSequence value) {
    this.entityType = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public java.lang.CharSequence getSource() {
    return source;
  }


  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'topic' field.
   * @return The value of the 'topic' field.
   */
  public java.lang.CharSequence getTopic() {
    return topic;
  }


  /**
   * Sets the value of the 'topic' field.
   * @param value the value to set.
   */
  public void setTopic(java.lang.CharSequence value) {
    this.topic = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.CharSequence getVersion() {
    return version;
  }


  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.CharSequence value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'traceId' field.
   * @return The value of the 'traceId' field.
   */
  public java.lang.CharSequence getTraceId() {
    return traceId;
  }


  /**
   * Sets the value of the 'traceId' field.
   * @param value the value to set.
   */
  public void setTraceId(java.lang.CharSequence value) {
    this.traceId = value;
  }

  /**
   * Gets the value of the 'producerRegion' field.
   * @return The value of the 'producerRegion' field.
   */
  public java.lang.CharSequence getProducerRegion() {
    return producerRegion;
  }


  /**
   * Sets the value of the 'producerRegion' field.
   * @param value the value to set.
   */
  public void setProducerRegion(java.lang.CharSequence value) {
    this.producerRegion = value;
  }

  /**
   * Gets the value of the 'retryCount' field.
   * @return The value of the 'retryCount' field.
   */
  public java.lang.Integer getRetryCount() {
    return retryCount;
  }


  /**
   * Sets the value of the 'retryCount' field.
   * @param value the value to set.
   */
  public void setRetryCount(java.lang.Integer value) {
    this.retryCount = value;
  }

  /**
   * Gets the value of the 'ttl' field.
   * @return The value of the 'ttl' field.
   */
  public java.lang.Integer getTtl() {
    return ttl;
  }


  /**
   * Sets the value of the 'ttl' field.
   * @param value the value to set.
   */
  public void setTtl(java.lang.Integer value) {
    this.ttl = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.CharSequence getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.CharSequence value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'data' field.
   * @return The value of the 'data' field.
   */
  public java.lang.Object getData() {
    return data;
  }


  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(java.lang.Object value) {
    this.data = value;
  }

  /**
   * Creates a new AvroEventWrapper RecordBuilder.
   * @return A new AvroEventWrapper RecordBuilder
   */
  public static com.example.avro.AvroEventWrapper.Builder newBuilder() {
    return new com.example.avro.AvroEventWrapper.Builder();
  }

  /**
   * Creates a new AvroEventWrapper RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroEventWrapper RecordBuilder
   */
  public static com.example.avro.AvroEventWrapper.Builder newBuilder(com.example.avro.AvroEventWrapper.Builder other) {
    if (other == null) {
      return new com.example.avro.AvroEventWrapper.Builder();
    } else {
      return new com.example.avro.AvroEventWrapper.Builder(other);
    }
  }

  /**
   * Creates a new AvroEventWrapper RecordBuilder by copying an existing AvroEventWrapper instance.
   * @param other The existing instance to copy.
   * @return A new AvroEventWrapper RecordBuilder
   */
  public static com.example.avro.AvroEventWrapper.Builder newBuilder(com.example.avro.AvroEventWrapper other) {
    if (other == null) {
      return new com.example.avro.AvroEventWrapper.Builder();
    } else {
      return new com.example.avro.AvroEventWrapper.Builder(other);
    }
  }

  /**
   * RecordBuilder for AvroEventWrapper instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroEventWrapper>
    implements org.apache.avro.data.RecordBuilder<AvroEventWrapper> {

    private java.lang.CharSequence eventId;
    private java.lang.CharSequence eventType;
    private java.lang.CharSequence entityType;
    private java.lang.CharSequence source;
    private java.lang.CharSequence topic;
    private java.lang.CharSequence version;
    private java.lang.CharSequence traceId;
    private java.lang.CharSequence producerRegion;
    private java.lang.Integer retryCount;
    private java.lang.Integer ttl;
    private java.lang.CharSequence timestamp;
    private java.lang.Object data;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.avro.AvroEventWrapper.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.entityType)) {
        this.entityType = data().deepCopy(fields()[2].schema(), other.entityType);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.source)) {
        this.source = data().deepCopy(fields()[3].schema(), other.source);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.topic)) {
        this.topic = data().deepCopy(fields()[4].schema(), other.topic);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.version)) {
        this.version = data().deepCopy(fields()[5].schema(), other.version);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.traceId)) {
        this.traceId = data().deepCopy(fields()[6].schema(), other.traceId);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.producerRegion)) {
        this.producerRegion = data().deepCopy(fields()[7].schema(), other.producerRegion);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.retryCount)) {
        this.retryCount = data().deepCopy(fields()[8].schema(), other.retryCount);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.ttl)) {
        this.ttl = data().deepCopy(fields()[9].schema(), other.ttl);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[10].schema(), other.timestamp);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.data)) {
        this.data = data().deepCopy(fields()[11].schema(), other.data);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
    }

    /**
     * Creates a Builder by copying an existing AvroEventWrapper instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.avro.AvroEventWrapper other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.entityType)) {
        this.entityType = data().deepCopy(fields()[2].schema(), other.entityType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.source)) {
        this.source = data().deepCopy(fields()[3].schema(), other.source);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.topic)) {
        this.topic = data().deepCopy(fields()[4].schema(), other.topic);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.version)) {
        this.version = data().deepCopy(fields()[5].schema(), other.version);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.traceId)) {
        this.traceId = data().deepCopy(fields()[6].schema(), other.traceId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.producerRegion)) {
        this.producerRegion = data().deepCopy(fields()[7].schema(), other.producerRegion);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.retryCount)) {
        this.retryCount = data().deepCopy(fields()[8].schema(), other.retryCount);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.ttl)) {
        this.ttl = data().deepCopy(fields()[9].schema(), other.ttl);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[10].schema(), other.timestamp);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.data)) {
        this.data = data().deepCopy(fields()[11].schema(), other.data);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'eventId' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventId() {
      return eventId;
    }


    /**
      * Sets the value of the 'eventId' field.
      * @param value The value of 'eventId'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setEventId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.eventId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventId' field has been set.
      * @return True if the 'eventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventId' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearEventId() {
      eventId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventType() {
      return eventType;
    }


    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setEventType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.eventType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'entityType' field.
      * @return The value.
      */
    public java.lang.CharSequence getEntityType() {
      return entityType;
    }


    /**
      * Sets the value of the 'entityType' field.
      * @param value The value of 'entityType'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setEntityType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.entityType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'entityType' field has been set.
      * @return True if the 'entityType' field has been set, false otherwise.
      */
    public boolean hasEntityType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'entityType' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearEntityType() {
      entityType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public java.lang.CharSequence getSource() {
      return source;
    }


    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.source = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearSource() {
      source = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'topic' field.
      * @return The value.
      */
    public java.lang.CharSequence getTopic() {
      return topic;
    }


    /**
      * Sets the value of the 'topic' field.
      * @param value The value of 'topic'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setTopic(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.topic = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'topic' field has been set.
      * @return True if the 'topic' field has been set, false otherwise.
      */
    public boolean hasTopic() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'topic' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearTopic() {
      topic = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.CharSequence getVersion() {
      return version;
    }


    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setVersion(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.version = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearVersion() {
      version = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'traceId' field.
      * @return The value.
      */
    public java.lang.CharSequence getTraceId() {
      return traceId;
    }


    /**
      * Sets the value of the 'traceId' field.
      * @param value The value of 'traceId'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setTraceId(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.traceId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'traceId' field has been set.
      * @return True if the 'traceId' field has been set, false otherwise.
      */
    public boolean hasTraceId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'traceId' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearTraceId() {
      traceId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'producerRegion' field.
      * @return The value.
      */
    public java.lang.CharSequence getProducerRegion() {
      return producerRegion;
    }


    /**
      * Sets the value of the 'producerRegion' field.
      * @param value The value of 'producerRegion'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setProducerRegion(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.producerRegion = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'producerRegion' field has been set.
      * @return True if the 'producerRegion' field has been set, false otherwise.
      */
    public boolean hasProducerRegion() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'producerRegion' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearProducerRegion() {
      producerRegion = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'retryCount' field.
      * @return The value.
      */
    public java.lang.Integer getRetryCount() {
      return retryCount;
    }


    /**
      * Sets the value of the 'retryCount' field.
      * @param value The value of 'retryCount'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setRetryCount(java.lang.Integer value) {
      validate(fields()[8], value);
      this.retryCount = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'retryCount' field has been set.
      * @return True if the 'retryCount' field has been set, false otherwise.
      */
    public boolean hasRetryCount() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'retryCount' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearRetryCount() {
      retryCount = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'ttl' field.
      * @return The value.
      */
    public java.lang.Integer getTtl() {
      return ttl;
    }


    /**
      * Sets the value of the 'ttl' field.
      * @param value The value of 'ttl'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setTtl(java.lang.Integer value) {
      validate(fields()[9], value);
      this.ttl = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'ttl' field has been set.
      * @return True if the 'ttl' field has been set, false otherwise.
      */
    public boolean hasTtl() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'ttl' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearTtl() {
      ttl = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.CharSequence getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setTimestamp(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.timestamp = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'data' field.
      * @return The value.
      */
    public java.lang.Object getData() {
      return data;
    }


    /**
      * Sets the value of the 'data' field.
      * @param value The value of 'data'.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder setData(java.lang.Object value) {
      validate(fields()[11], value);
      this.data = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'data' field has been set.
      * @return True if the 'data' field has been set, false otherwise.
      */
    public boolean hasData() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'data' field.
      * @return This builder.
      */
    public com.example.avro.AvroEventWrapper.Builder clearData() {
      data = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroEventWrapper build() {
      try {
        AvroEventWrapper record = new AvroEventWrapper();
        record.eventId = fieldSetFlags()[0] ? this.eventId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.eventType = fieldSetFlags()[1] ? this.eventType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.entityType = fieldSetFlags()[2] ? this.entityType : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.source = fieldSetFlags()[3] ? this.source : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.topic = fieldSetFlags()[4] ? this.topic : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.version = fieldSetFlags()[5] ? this.version : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.traceId = fieldSetFlags()[6] ? this.traceId : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.producerRegion = fieldSetFlags()[7] ? this.producerRegion : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.retryCount = fieldSetFlags()[8] ? this.retryCount : (java.lang.Integer) defaultValue(fields()[8]);
        record.ttl = fieldSetFlags()[9] ? this.ttl : (java.lang.Integer) defaultValue(fields()[9]);
        record.timestamp = fieldSetFlags()[10] ? this.timestamp : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.data = fieldSetFlags()[11] ? this.data :  defaultValue(fields()[11]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroEventWrapper>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroEventWrapper>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroEventWrapper>
    READER$ = (org.apache.avro.io.DatumReader<AvroEventWrapper>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










